
SELECT TOP 2 * FROM TBL_STUDENT
SELECT TOP 2 * FROM TBL_COURSE
SELECT TOP 2 * FROM TBL_MAPPING


/*************************** QUESTIONS FROM JOINS DATA **********************************/
--Q1: Display student details and the courses they are enrolled to.
SELECT
T1.NAME AS STU_NAME, PHONE_CUS, EMAIL_CUS, T3.NAME AS COURSE_NAME
FROM
TBL_STUDENT AS T1
INNER JOIN TBL_MAPPING AS T2 ON T1.STU_ID = T2.STU_ID
INNER JOIN TBL_COURSE AS T3 ON T2.COURSE_ID = T3.COURSE_ID

--Q2: Display details of all students and the count of courses they are enrolled to.
SELECT
*
FROM
TBL_STUDENT AS T1
INNER JOIN TBL_MAPPING AS T2 ON T1.STU_ID = T2.STU_ID

SELECT
NAME, PHONE_CUS, EMAIL_CUS, COUNT(COURSE_ID) AS TOT_COURSES
FROM
TBL_STUDENT AS T1
LEFT JOIN TBL_MAPPING AS T2 ON T1.STU_ID = T2.STU_ID
GROUP BY
NAME, PHONE_CUS, EMAIL_CUS

--Q3: Display details of students which are not yet enrolled to any course.
SELECT
T1.*
FROM
TBL_STUDENT AS T1
LEFT JOIN TBL_MAPPING AS T2 ON T1.STU_ID = T2.STU_ID
WHERE
T2.STU_ID IS NULL

SELECT
NAME, PHONE_CUS, EMAIL_CUS, COUNT(COURSE_ID) AS TOT_COURSES
FROM
TBL_STUDENT AS T1
LEFT JOIN TBL_MAPPING AS T2 ON T1.STU_ID = T2.STU_ID
GROUP BY
NAME, PHONE_CUS, EMAIL_CUS
HAVING 
COUNT(COURSE_ID) = 0

--Q4: List all courses and the count of students enrolled to each course.
SELECT
NAME AS COURSE_NAME, COUNT(STU_ID) AS STU_COUNT
FROM
TBL_COURSE A
LEFT JOIN TBL_MAPPING B ON A.COURSE_ID = B.COURSE_ID
GROUP BY
NAME

SELECT
NAME AS COURSE_NAME, COUNT(STU_ID) AS STU_COUNT
FROM
TBL_MAPPING A
RIGHT JOIN TBL_COURSE B ON A.COURSE_ID = B.COURSE_ID
GROUP BY
NAME


/************************* QUESTIONS FROM MSO DATABASE **********************************/
--Q1: In order to post welcome letters and user guides to customers, dispatch team need 
--    customer name, address and contact details. Write SQL query to get desired info.
SELECT
FNAME_CUS, LNAME_CUS, PHONE_CUS, ADDRESS_HSE, CITY_HSE, COUNTRY_HSE
FROM
TBL_CUSTOMER
INNER JOIN TBL_HOUSE ON CUST_ID_HSE = CUST_ID_CUS

SELECT
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS) AS CUSTNAME, 
PHONE_CUS AS CONTACT_NO, 
ADDRESS_HSE + ', ' + CITY_HSE + ', ' + COUNTRY_HSE AS CUST_ADDRESS
FROM
TBL_CUSTOMER
INNER JOIN TBL_HOUSE ON CUST_ID_HSE = CUST_ID_CUS

--Q2: Get the details of customers who are using our services in more than one location.
SELECT
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS) AS CUSTNAME, 
PHONE_CUS AS CONTACT_NO, 
COUNT(HOUSE_ID_HSE) AS [NO OF HOUSES]
FROM
TBL_CUSTOMER
INNER JOIN TBL_HOUSE ON CUST_ID_HSE = CUST_ID_CUS
GROUP BY
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS), PHONE_CUS
HAVING
COUNT(HOUSE_ID_HSE) > 1

--Q3: Which are the customers that have not given their house details.
SELECT
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS) AS CUSTNAME, 
PHONE_CUS AS CONTACT_NO, 
COUNT(HOUSE_ID_HSE) AS [NO OF HOUSES]
FROM
TBL_CUSTOMER
LEFT JOIN TBL_HOUSE ON CUST_ID_HSE = CUST_ID_CUS
GROUP BY
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS), PHONE_CUS
HAVING
COUNT(HOUSE_ID_HSE) = 0

SELECT
TBL_CUSTOMER.*
FROM
TBL_CUSTOMER
LEFT JOIN TBL_HOUSE ON CUST_ID_HSE = CUST_ID_CUS
WHERE
HOUSE_ID_HSE IS NULL

--Q4: Get the install dates corresponding to all customers in different locations.
SELECT
ADDRESS_HSE + ', ' + CITY_HSE + ', ' + COUNTRY_HSE AS CUST_ADDRESS,
COMPL_DTE_WO AS INSTALL_DATE,
STATUS_WO
FROM
TBL_HOUSE
INNER JOIN TBL_WORK_ORDER ON CUST_ID_HSE = CUST_ID_WO AND HOUSE_ID_HSE = HOUSE_ID_WO
WHERE
UPPER(TYPE_WO) = 'INSTALL' AND STATUS_WO = 'CLOSE'

--Q5: Get the location details along with count of services installed in the location.
SELECT
ADDRESS_HSE + ', ' + CITY_HSE + ', ' + COUNTRY_HSE AS CUST_ADDRESS,
COMPL_DTE_WO AS INSTALL_DATE,
COUNT(ORD_ID_ITM) AS SERVICES_CNT
FROM
TBL_HOUSE
INNER JOIN TBL_WORK_ORDER ON CUST_ID_HSE = CUST_ID_WO AND HOUSE_ID_HSE = HOUSE_ID_WO
INNER JOIN TBL_ORDER_ITEM ON ORD_ID_WO = ORD_ID_ITM
WHERE
UPPER(TYPE_WO) = 'INSTALL' AND STATUS_WO = 'CLOSE'
GROUP BY
ADDRESS_HSE + ', ' + CITY_HSE + ', ' + COUNTRY_HSE, 
COMPL_DTE_WO

--Q6: Get the customer name and contact details of the customers along with other info 
--    extracted in Q5 above.
SELECT
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS) AS CUSTNAME, 
PHONE_CUS AS CONTACT_NO, 
ADDRESS_HSE + ', ' + CITY_HSE + ', ' + COUNTRY_HSE AS CUST_ADDRESS,
COMPL_DTE_WO AS INSTALL_DATE,
COUNT(ORD_ID_ITM) AS SERVICES_CNT
FROM
TBL_HOUSE
INNER JOIN TBL_WORK_ORDER ON CUST_ID_HSE = CUST_ID_WO AND HOUSE_ID_HSE = HOUSE_ID_WO
INNER JOIN TBL_ORDER_ITEM ON ORD_ID_WO = ORD_ID_ITM
INNER JOIN TBL_CUSTOMER ON CUST_ID_HSE = CUST_ID_CUS

WHERE
UPPER(TYPE_WO) = 'INSTALL' AND STATUS_WO = 'CLOSE'
GROUP BY
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS),
PHONE_CUS,
ADDRESS_HSE + ', ' + CITY_HSE + ', ' + COUNTRY_HSE, 
COMPL_DTE_WO

--Q7: Location details where install orders are in open state.
SELECT
ADDRESS_HSE + ', ' + CITY_HSE + ', ' + COUNTRY_HSE AS CUST_ADDRESS,
COMPL_DTE_WO AS INSTALL_DATE
FROM
TBL_HOUSE
INNER JOIN TBL_WORK_ORDER ON CUST_ID_HSE = CUST_ID_WO AND HOUSE_ID_HSE = HOUSE_ID_WO
WHERE
UPPER(TYPE_WO) = 'INSTALL' AND STATUS_WO = 'OPEN'

--Q8: Are their any customers who have made a complaint more than once?
SELECT
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS) AS CUSTNAME, 
PHONE_CUS AS CONTACT_NO, 
COUNT(ORD_ID_CO) AS NO_OF_COMPLAINTS
FROM
TBL_CUSTOMER
INNER JOIN TBL_COMPLAINT_ORDER ON CUST_ID_CO = CUST_ID_CUS
GROUP BY
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS),
PHONE_CUS
HAVING
COUNT(ORD_ID_CO) > 1

--Q9: Count total open orders in the available data.
SELECT COUNT(*) AS TOT_RECORDS FROM (
SELECT * FROM TBL_WORK_ORDER WHERE STATUS_WO = 'OPEN'
UNION ALL
SELECT * FROM TBL_COMPLAINT_ORDER WHERE STATUS_CO = 'OPEN'
) TT

--Q10: Are there any location ids where we have open service orders for disconnection 
--and open complaint orders?
-- Method 1:
SELECT * FROM (
SELECT HOUSE_ID_WO AS HOUSE_ID FROM TBL_WORK_ORDER WHERE TYPE_WO LIKE 'DISCO%' AND STATUS_WO = 'OPEN'
INTERSECT
SELECT HOUSE_ID_CO FROM TBL_COMPLAINT_ORDER WHERE STATUS_CO = 'OPEN'
) TT
INNER JOIN TBL_HOUSE ON HOUSE_ID_HSE = HOUSE_ID

-- Method 2:
SELECT 
HOUSE_ID_WO AS HOUSE_ID 
FROM 
TBL_WORK_ORDER 
WHERE 
TYPE_WO LIKE 'DISCO%' AND STATUS_WO = 'OPEN' AND HOUSE_ID_WO IN (
SELECT HOUSE_ID_CO FROM TBL_COMPLAINT_ORDER WHERE STATUS_CO = 'OPEN'
)

--Q11: Locations where customers have never given any complaints but 
-- discontinued the services.
SELECT HOUSE_ID_WO FROM TBL_WORK_ORDER WHERE TYPE_WO LIKE 'DISCO%' AND STATUS_WO = 'CLOSE'
EXCEPT
SELECT HOUSE_ID_CO FROM TBL_COMPLAINT_ORDER

SELECT HOUSE_ID_WO FROM TBL_WORK_ORDER 
WHERE 
TYPE_WO LIKE 'DISCO%' AND STATUS_WO = 'CLOSE' AND HOUSE_ID_WO NOT IN 
(SELECT HOUSE_ID_CO FROM TBL_COMPLAINT_ORDER)

--Q12: List down the customers and no of total (WO + Complaints) orders placed by them 
SELECT
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS) AS CUSTNAME, 
COUNT(ORD_ID_CO) AS CNT_OF_ORDERS
FROM 
TBL_CUSTOMER
INNER JOIN (
SELECT * FROM TBL_COMPLAINT_ORDER
UNION ALL
SELECT * FROM TBL_WORK_ORDER
) T1 ON CUST_ID_CUS = CUST_ID_CO
GROUP BY
CONCAT(FNAME_CUS, SPACE(1), LNAME_CUS)








